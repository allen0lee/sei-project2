<div class="one-photo-page-container">
  <div class="photo-btn-container">
    <div class="photo-container">
      <img src="<%= @photo.image_url %>" alt="">
    </div>

    <div class="edit-delete-forms">
      <%# edit button should show to photo owner, hidden for not photo owner %>
      <% if session[:user_id] == @photo.user_id  %>
        <div class="edit-photo-form">
          <form action="/photos/<%= @photo.id %>/<%= @photo.album_id %>/edit">
            <button class="button edit-photo-btn">edit</button>
          </form>
        </div>
      <% end %>

      <%# delete button should show to photo owner, hidden for not photo owner %>
      <% if session[:user_id] == @photo.user_id  %>
        <div class="delete-photo-form">
          <form action="/photos/<%= @photo.id %>" method="post">
            <input type="hidden" name="photo_id" value="<%= @photo.id %>"> 
            <input type="hidden" name="_method" value="delete">
            <button class="button delete-photo-btn">delete</button>
          </form>
        </div>
      <% end %>
    </div>
  </div>

  <span>&nbsp &nbsp</span>

  <div class="comment-like-container">
    <div class="post-comment-form">
        <input type="hidden" name="photo_id" value="<%= @photo.id %>">

        <div class="comment-input-field">
          <textarea class="content" name="content" placeholder="comment"></textarea>
        </div>   

        <div class="post-comment-btn-holder">
          <button class="button post-comment-btn">post</button>
        </div> 
    </div>

    <% if logged_in? %>
      <div class="image-link">
        <a href="<%= @photo.image_url %>" target="_blank">
          image link
        </a>
      </div>
    <% end %>

    <div class="like-container">
      <div class="like-btn">
        <button class="add-like-btn"><img src="/images/heart.png" alt=""></button>
      </div>     
      <div class="like-holder"><%= @like.number %></div> 
    </div>
  </div>
</div>


<%# list all comments of a photo %>
<div class="list-of-comments">
  <div class="comments-area"></div>
</div>

<script src="https://code.jquery.com/jquery-3.4.1.js"></script>
<script>
  let addLikeBtn = document.querySelector('.add-like-btn')
  const handleAddLike = () => {
    const options = {
      url: '/likes',
      method: 'put',
      data: {
        photo_id: <%= @photo.id %>
      }
    }
    $.ajax(options).done(res => {
      let likeCount = document.querySelector('.like-holder')
      likeCount.textContent = res.like_count
    })
  }
  addLikeBtn.addEventListener('click', handleAddLike)

  async function getAllComments() {
    const options = {
      url: `/api/comments/<%= @photo.id %>`,
      method: 'get'
    } 
    return await $.ajax(options)
  }

  let offset = 5 
  let page = 1    
  let commentsPerPage = 5

  let commentsArea = document.querySelector('.comments-area')
  const requestComments = (offset, page) => {
    const options = {
      url: `/api/comments/<%= @photo.id %>/${offset * page}/${page}`,
      method: 'get'
    }
    $.ajax(options).done(res => {
      commentsArea.querySelectorAll('article').forEach(comment => { 
        comment.remove()
      })  
      for(let i = 0; i < res.length; i++) {             // show 5 comments
        let article = document.createElement('article')
        commentsArea.append(article)

        let userId = res[i].user_id
        console.log(typeof(userId))
        console.log(`<%= User.find_by(id: 2).email %>`)


        article.innerHTML = 
        `<p><%= User.find_by(id: 2).email %> &nbsp &nbsp &nbsp
          ${res[i].time}
        </p>
        <div class="comment">
          <p>${res[i].content}</p>
        </div>`
      }


    })    
  }

  requestComments(offset, page)

  let postCommentBtn = document.querySelector('.post-comment-btn')
  const handlePostComment = () => {
    const options = {
      url: '/comments',
      method: 'post',
      data: {
        photo_id: <%= @photo.id %>,
        content: document.querySelector('.content').value
      }
    }
    $.ajax(options).done(() => {
      getAllComments().then(res => {
        let numOfComments = res.num_of_comments
        let lastPage = Math.ceil(numOfComments/commentsPerPage)
        page = lastPage // update page number
        requestComments(offset, lastPage)
      })
    })
  }
  postCommentBtn.addEventListener('click', handlePostComment)

</script>








<div class="one-photo-page-container">
  <div class="ui-card shadow">
    <div class="head">
      <img class="avatar" src="https://via.placeholder.com/50" alt=""> <%= @user_email %>
    </div>
    <div class="photo-container">
      <img src="<%= @photo.image_url %>" alt="">
    </div>
    <div class="description">
      <p><%= @photo.name %></p>      
      <a href="<%= @photo.image_url %>" target="_blank">
        View Image
      </a>
    </div>
    <footer>
      <div>
        <span class="add-like-btn">❤️</span>
        <span class="like-holder"><%= @like.number %></span>
      </div>
    </footer>
  </div>

</div>

<%# list all comments of a photo %>
<div class="list-of-comments">
  <div class="comments-area"></div>
</div>

<div class="comment-prev-next">
  <a class="prev-5-comments">prev</a>
  <% if @comment_pages == 0 %>
    <% @comment_pages = 1 %>
  <% end %>
  <span class="comments-page">1</span><span class="total-page">/<%= @comment_pages %></span>
  <a class="next-5-comments">next</a>
</div>

<div class="post-comment-form">
  <div class="comment-input-field">
    <textarea class="content" name="content" placeholder="comment"></textarea>
  </div>   

  <div class="post-comment-btn">
    <button>post</button>
  </div>
</div>


<script src="https://code.jquery.com/jquery-3.4.1.js"></script>
<script>
  let addLikeBtn = document.querySelector('.add-like-btn')
  const handleAddLike = () => {
    const options = {
      url: '/likes',
      method: 'put',
      data: {
        photo_id: <%= @photo.id %>
      }
    }
    $.ajax(options).done(res => {
      let likeCount = document.querySelector('.like-holder')
      likeCount.textContent = res.like_count
    })
  }
  addLikeBtn.addEventListener('click', handleAddLike)

  async function getNumOfAllComments() {
    const options = {
      url: `/api/comments/<%= @photo.id %>`,
      method: 'get'
    } 
    return await $.ajax(options)
  }

  let offset = 5 
  let page = 1    
  let commentsPerPage = 5
  let setCommentsPage = document.querySelector('.comments-page')

  // async function requestUserEmail(userId) {
  //   const options = {
  //     url: `/api/users/${userId}`,
  //     method: 'get'
  //   }
  //   return await $.ajax(options)
  // }

  let commentsArea = document.querySelector('.comments-area')
  const requestComments = (offset, page) => {
    const options = {
      url: `/api/comments/<%= @photo.id %>/${offset * page}/${page}`,
      method: 'get'
    }
    $.ajax(options).done(res => {
      commentsArea.querySelectorAll('article').forEach(comment => { 
        comment.remove()
      })  
      for(let i = 0; i < res.length; i++) {             // show 5 comments
        let article = document.createElement('article')
        commentsArea.append(article)
        article.innerHTML = 
        `<div class="head">
          <img class="avatar" src="https://via.placeholder.com/50" alt="">
          ${res[i].user_email} <br>
          ${res[i].time}
        </div>
        <div class="comment">
          <p>${res[i].content}</p>
        </div>`

        // let userId = res[i].user_id
        // console.log(`<%= User.find_by(id: 2).email %>`) // cannot embed js in ruby

        // requestUserEmail(res[i].user_id).then(response => {
        //   article.innerHTML = 
        //   `<p>${response.user_email} &nbsp &nbsp &nbsp
        //     ${res[i].time}
        //   </p>
        //   <div class="comment">
        //     <p>${res[i].content}</p>
        //   </div>`
        // })
      }
    })    
  }

  requestComments(offset, page)

  let loadNext5Comments = document.querySelector('.next-5-comments')
  <% if @comment_pages == 1 %>
    loadNext5Comments.style.display = 'none'
  <% end %>

  let postCommentBtn = document.querySelector('.post-comment-btn')
  const handlePostComment = () => {
    const options = {
      url: '/comments',
      method: 'post',
      data: {
        photo_id: <%= @photo.id %>,
        content: document.querySelector('.content').value
      }
    }
    $.ajax(options).done(() => {
      getNumOfAllComments().then(res => {
        let numOfComments = res.num_of_comments
        let lastPage = Math.ceil(numOfComments/commentsPerPage)
        page = lastPage // update page number
        setCommentsPage.textContent = page
        document.querySelector('.content').value = '' // clear textarea after post a comment
        requestComments(offset, lastPage)
      })
    })
  }
  postCommentBtn.addEventListener('click', handlePostComment)

  let setTotalPage = document.querySelector('.total-page')
  const handleNext5Comments = () => {
    getNumOfAllComments().then(res => {
      let numOfComments = res.num_of_comments
      let lastPage = Math.ceil(numOfComments/commentsPerPage) 
      if(page < lastPage) {
        loadNext5Comments.style.display = 'inline-block'
        loadPrev5Comments.style.display = 'inline-block'        
        page += 1
        setCommentsPage.textContent = page
        setTotalPage.textContent = `/${lastPage}`
        if(page == lastPage) {
          loadNext5Comments.style.display = 'none' // disable 'next'
        }
      }
      requestComments(offset, page)
    })
  }
  loadNext5Comments.addEventListener('click', handleNext5Comments)

  let loadPrev5Comments = document.querySelector('.prev-5-comments')
  const handlePrev5Comments = () => {
    if(page > 1) {
      loadNext5Comments.style.display = 'inline-block'
      loadPrev5Comments.style.display = 'inline-block'
      page -= 1
      setCommentsPage.textContent = page
      if(page == 1) {
        loadPrev5Comments.style.display = 'none' // disable 'prev'
      }
    }
    requestComments(offset, page)
  }
  loadPrev5Comments.addEventListener('click', handlePrev5Comments)

  let editPhotoBtn = document.querySelector('.edit-photo-btn')
  let editPhotoForm = document.querySelector('.edit-photo-form')
  const showUpdatePhotoForm = () => {
    editPhotoForm.style.display = 'block'
    let span = document.querySelector('.close-edit-photo-form-btn')
    span.onclick = () => { 
      editPhotoForm.style.display = 'none'
    }
  }

</script>








<%# list one user's all albums and unarchived photos %>

<div class="tab">
  <button class="tablinks" onclick="openTab(event, 'Non-album images')" id="defaultOpen">Non-album images</button>
  <button class="tablinks" onclick="openTab(event, 'Albums')">Albums</button>
</div>

<div id="Albums" class="tabcontent">
  <div class="dashboard-albums-container"> 
    <div class="display-box"></div>

    <div class="create-album">  
      <button class="button show-create-albums-btn" onclick="openCreateAlbumForm()">New Album</button>
    </div>
  </div>

  <div class="prev-next">
    <a class="prev-8-albums">prev</a>
    <% if @pages_of_albums == 0 %>
      <% @pages_of_albums = 1 %>
    <% end %>
    <span class="albums-page">1</span><span class="total-albums-page">/<%= @pages_of_albums %></span>
    <a class="next-8-albums">next</a>
  </div>

  <div class="create-album-form">
    <span class="close-create-album-form-btn">&times</span>
    
    <div>
      <label for="">name</label>
      <input class="theme-image-name" type="text" name="name" required>    
    </div>
    
    <%# <div>
      <label for="">theme image url</label>
      <input class="theme-image-url" type="text" name="theme_image_url" required>   
    </div> %>

    <div>
      <button class="button create-album-btn" onclick="closeCreateAlbumForm()">create album</button>
    </div>
  </div>
</div>

<div id="Non-album images" class="tabcontent">
  <div class="dashboard-photos-container"> 
    <div class="display-box1"></div>

    <div>
      <div class="upload-photo">
        <button class="button show-upload-photo-form" onclick="openUploadPhotoForm()">upload photo</button>
      </div>

      <div class="group-photo">
        <button class="button show-group-photo-form" onclick="openGroupPhotoForm()">add to album</button>
      </div>
    </div>
  </div>

  <div class="prev-next">
    <a class="prev-12-photos">prev</a>
    <% if @pages_of_photos == 0 %>
      <% @pages_of_photos = 1 %>
    <% end %>
    <span class="photos-page">1</span><span class="total-photos-page">/<%= @pages_of_photos %></span>
    <a class="next-12-photos">next</a>
  </div>

  <div class="upload-photo-form">
    <span class="close-upload-photo-form-btn">&times</span>
    
    <div>
      <label for="">name</label>
      <input class="image-name" type="text" name="name" required>    
    </div>
    
    <div>
      <label for="">image url</label>
      <input class="image-url" type="text" name="image_url" required>   
    </div>

    <div>
      <button class="button upload-photo-btn" onclick="closeUploadPhotoForm()">upload photo</button>
    </div>
  </div>

  <div class="group-photo-form">
    <span class="close-group-photo-form-btn">&times</span>

  <%# Array.from(document.querySelector('#albums').options).find(option => option.selected).dataset.albumId %>
    <div>
      <label for="">choose album</label>
      <select class="albums-list"></select>
    </div>

    <div>
      <button class="button group-photo-btn" onclick="closeGroupPhotoForm()">add to album</button>
    </div>
  </div>
</div>


<div class="enlarged-image-container">
    <span class="close-image-btn">&times</span>
    <img id="enlargedImg">
</div>


<script src="https://code.jquery.com/jquery-3.4.1.js"></script>
<script>
  let createAlbumForm = document.querySelector('.create-album-form')
  const openCreateAlbumForm = () => {
    document.querySelector('.theme-image-name').value = '' // clear input field each time open
    // document.querySelector('.theme-image-url').value = ''
    createAlbumForm.style.display = 'block'
    let span = document.querySelector('.close-create-album-form-btn')
    span.onclick = () => { 
      createAlbumForm.style.display = 'none'
    }
  }

  let uploadPhotoForm = document.querySelector('.upload-photo-form')
  const openUploadPhotoForm = () => {
    document.querySelector('.image-name').value = '' // clear input field each time open
    document.querySelector('.image-url').value = ''
    uploadPhotoForm.style.display = 'block'
    let span = document.querySelector('.close-upload-photo-form-btn')
    span.onclick = () => { 
      uploadPhotoForm.style.display = 'none'
    }
  }

  let groupPhotoForm = document.querySelector('.group-photo-form')
  const openGroupPhotoForm = () => {
    groupPhotoForm.style.display = 'block'
    let span = document.querySelector('.close-group-photo-form-btn')
    span.onclick = () => { 
      groupPhotoForm.style.display = 'none'
    }
  }

  let displayBox1 = document.querySelector('.display-box1')
  const enlargeImage = (event) => {
    let enlargedImageBackground = document.querySelector('.enlarged-image-container')
    if(event.target.classList.contains('img')) {
      let enlargeImg = document.getElementById('enlargedImg')
      enlargedImageBackground.style.display = 'block'
      let imgHolder = event.target.closest('.img-holder')
      enlargeImg.src = imgHolder.querySelector('.img').src
    }
    let span = document.querySelector('.close-image-btn')
    span.onclick = () => { 
      enlargedImageBackground.style.display = 'none'
    }
  }
  displayBox1.addEventListener('click', enlargeImage)

  async function getAllAlbums() {
    const options = {
      url: `/api/albums/<%= @user_id %>`,
      method: 'get'
    } 
    return await $.ajax(options)
  }

  let loadNext8Albums = document.querySelector('.next-8-albums')
  let loadPrev8Albums = document.querySelector('.prev-8-albums')
  let displayBox = document.querySelector('.display-box')
  let albumsOffset = 8 
  let albumsPage = 1    
  let albumsPerPage = 8

  const requestAlbums = (albumsOffset, albumsPage) => {
    const options = {
      url: `/api/albums/<%= @user_id %>/${albumsOffset * albumsPage}/${albumsPage}`,
      method: 'get'
    }
    $.ajax(options).done(res => {
      displayBox.querySelectorAll('article').forEach(album => { // clear prev 8 albums
        album.remove()
      })  
      for(let i = 0; i < res.length; i++) {             // show 8 albums
        let article = document.createElement('article')
        displayBox.append(article)
        article.innerHTML = 
        `<div class="album-container">
          <div class="album-cover">
            <a href="/photos/${res[i].name}/${res[i].id}">
              <img src="https://i.imgur.com/6Iw9q2Z.png" alt="">
            </a>
            <div class="latest-photo-container">
              <img class="latest-photo" src="${res[i].latest_image_url}" alt="">
            </div>
          </div>
          <div class="album-name">
            ${res[i].name}
          </div>
        </div>`
      }
    })    
  }

  // 1st request - show first 8 albums
  requestAlbums(albumsOffset, albumsPage)

  <% if @pages_of_albums == 1 %>
    loadNext8Albums.style.display = 'none'
  <% end %>

  let setAlbumsPage = document.querySelector('.albums-page')
  let setTotalAlbumsPage = document.querySelector('.total-albums-page')
  const handleNext8Albums = () => {
    getAllAlbums().then(res => {
      let numOfAlbums = res.length
      let lastPage = Math.ceil(numOfAlbums/albumsPerPage) 
      if(albumsPage < lastPage) {
        loadNext8Albums.style.display = 'inline-block'
        loadPrev8Albums.style.display = 'inline-block'
        albumsPage += 1
        setAlbumsPage.textContent = albumsPage
        setTotalAlbumsPage.textContent = `/${lastPage}`
        if(albumsPage == lastPage) {
          loadNext8Albums.style.display = 'none' // disable 'next'
        }
      }
      requestAlbums(albumsOffset, albumsPage)
    })
  }
  loadNext8Albums.addEventListener('click', handleNext8Albums)

  const handlePrev8Albums = () => {
    if(albumsPage > 1) {
      loadNext8Albums.style.display = 'inline-block'
      loadPrev8Albums.style.display = 'inline-block'
      albumsPage -= 1
      setAlbumsPage.textContent = albumsPage
      if(albumsPage == 1) {
        loadPrev8Albums.style.display = 'none' // disable 'prev'
      }
    }
    requestAlbums(albumsOffset, albumsPage)
  }
  loadPrev8Albums.addEventListener('click', handlePrev8Albums)


  let createAlbumBtn = document.querySelector('.create-album-btn')
  const handleCreateAlbum = () => {
    $.ajax({
      url: '/albums/<%= @user_id %>',
      method: 'post',
      data: {
        user_id: <%= @user_id %>,
        name: document.querySelector('.theme-image-name').value,
        theme_image_url: "https://i.imgur.com/6Iw9q2Z.png"
      }
    }).done(() => {
      getAllAlbums().then(res => {
        let numOfAlbums = res.length
        let lastPage = Math.ceil(numOfAlbums/albumsPerPage)
        requestAlbums(albumsOffset, 1) // always go to first page to see the change
        setAlbumsPage.textContent = 1
        setTotalAlbumsPage.textContent = `/${lastPage}`
        loadPrev8Albums.style.display = 'none' // first page has no 'prev'
      })
    })
  }
  createAlbumBtn.addEventListener('click', handleCreateAlbum)

  closeCreateAlbumForm = () => { 
    createAlbumForm.style.display = 'none'
  }


  let loadNext12Photos = document.querySelector('.next-12-photos')
  let loadPrev12Photos = document.querySelector('.prev-12-photos')
  let photosOffset = 12 
  let photosPage = 1    // increase up to 10
  let photosPerPage = 12

  const requestPhotos = (photosOffset, photosPage) => {
    const options = {
      url: `/api/photos/<%= @user_id %>/${photosOffset * photosPage}/${photosPage}`,
      method: 'get'
    }
    $.ajax(options).done(res => {
      displayBox1.querySelectorAll('article').forEach(photo => { // clear display area for redraw
        photo.remove()
      })
      if(res != null) {
        for(let i = 0; i < res.length; i++) {             // draw 12 photos
          let article = document.createElement('article')
          displayBox1.append(article)
          article.innerHTML = 
          `<div class="photo-display">
            <div data-photo-id="${res[i].id}" class="img-holder">
              <img class="img" src="${res[i].image_url}" alt="">
              <div class="panel">
                <a class="select" onclick="selectPhoto(this)">select &nbsp</a>
                <a class="to-comment" href="/photos/${res[i].id}">comment &nbsp</a>
                <a data-photo-id="${res[i].id}" class="delete" onclick="deletePhoto(this)">delete</a>
              </div>
            </div>
          </div>`
        }
      } 
    })
  }

  // 1st request - show first 12 unarchived photos
  requestPhotos(photosOffset, photosPage)

  <% if @pages_of_photos == 1 %>
    loadNext12Photos.style.display = 'none'
  <% end %>

  async function getNumOfAllPhotos() {
    const options = {
      url: `/api/photos/<%= @user_id %>`,
      method: 'get'
    } 
    return await $.ajax(options)
  }

// upload unarchived photos - photos not grouped in album yet
  let uploadPhotoBtn = document.querySelector('.upload-photo-btn')
  let setPhotosPage = document.querySelector('.photos-page')
  const handleUploadPhoto = () => {
    $.ajax({
      url: '/photos/<%= @user_id %>',
      method: 'post',
      data: {
        user_id: <%= @user_id %>,
        name: document.querySelector('.image-name').value,
        image_url: document.querySelector('.image-url').value 
      }
    }).done(() => {
      getNumOfAllPhotos().then(res => {
        let numOfPhotos = res.num_of_photos
        let lastPage = Math.ceil(numOfPhotos/photosPerPage)
        requestPhotos(photosOffset, 1) // always go to first page to see the change
        setPhotosPage.textContent = 1
        setTotalPhotosPage.textContent = `/${lastPage}`
        loadPrev12Photos.style.display = 'none' // first page has no 'prev'
      })
    })
  }
  uploadPhotoBtn.addEventListener('click', handleUploadPhoto)

  closeUploadPhotoForm = () => { 
    uploadPhotoForm.style.display = 'none'
  }

  let setTotalPhotosPage = document.querySelector('.total-photos-page')
  const handleNext12Photos = () => {
    getNumOfAllPhotos().then(res => {
      let numOfPhotos = res.num_of_photos
      console.log(numOfPhotos)
      let lastPage = Math.ceil(numOfPhotos/photosPerPage) 
      if(photosPage < lastPage) {
        loadNext12Photos.style.display = 'inline-block'
        loadPrev12Photos.style.display = 'inline-block'        
        photosPage += 1
        setPhotosPage.textContent = photosPage
        setTotalPhotosPage.textContent = `/${lastPage}`
        if(photosPage == lastPage) {
          loadNext12Photos.style.display = 'none' // disable 'next'
        }
      }
      requestPhotos(photosOffset, photosPage)
    })
  }
  loadNext12Photos.addEventListener('click', handleNext12Photos)

  const handlePrev12Photos = () => {
    if(photosPage > 1) {
      loadNext12Photos.style.display = 'inline-block'
      loadPrev12Photos.style.display = 'inline-block'
      photosPage -= 1
      setPhotosPage.textContent = photosPage
      if(photosPage == 1) {
        loadPrev12Photos.style.display = 'none' // disable 'prev'
      }
    }
    requestPhotos(photosOffset, photosPage)
  }
  loadPrev12Photos.addEventListener('click', handlePrev12Photos)

  const selectPhoto = (photo) => {
    photo.closest('.img-holder').classList.toggle('selected')
  }

  let groupPhotoBtn = document.querySelector('.group-photo-btn')
  const handleGroupPhotos = () => {
    let selectedPhotos = document.querySelectorAll('.selected')
    let selectedAlbumId = document.querySelector('.albums-list').value
    let selectedPhotosIds = Array.from(selectedPhotos).map(photo => photo.getAttribute('data-photo-id')) // ["255", "256"]
    $.ajax({
      url: `/photos-move-in-album`, 
      method: 'put',
      data: {
        id: selectedPhotosIds, // array of selected photos' ids
        album_id: selectedAlbumId
      }
    }).done(() => {
      // stay in current page 
      getNumOfAllPhotos().then(res => {
        let numOfPhotos = res.num_of_photos
        let lastPage = Math.ceil(numOfPhotos/photosPerPage)
        if(photosPage >= lastPage) {
          photosPage = lastPage // update page number
          requestPhotos(photosOffset, photosPage)
          setPhotosPage.textContent = photosPage
          setTotalPhotosPage.textContent = `/${lastPage}`
          if(photosPage == 1) {
            loadPrev12Photos.style.display = 'none'
            loadNext12Photos.style.display = 'none'
          }
        } else if(photosPage <= lastPage) {
          requestPhotos(photosOffset, photosPage)
          setPhotosPage.textContent = photosPage
          setTotalPhotosPage.textContent = `/${lastPage}`
        }
      })
    })  
  }
  groupPhotoBtn.addEventListener('click', handleGroupPhotos)

  closeGroupPhotoForm = () => { 
    groupPhotoForm.style.display = 'none'
  }

  let showGroupPhotoFormBtn = document.querySelector('.show-group-photo-form')
  const handleGetAllAlbums = () => {
    getAllAlbums().then(res => {
      let albums = res
      let albumsList = document.querySelector('.albums-list')
      for(let i = 0; i < res.length; i++) {
        let option = document.createElement('option')
        albumsList.append(option)
        option.value = res[i].id
        option.textContent = res[i].name
      }
    })
  }
  showGroupPhotoFormBtn.addEventListener('click', handleGetAllAlbums) 

  const deletePhoto = (photo) => {
    let photoId = photo.getAttribute('data-photo-id')
    $.ajax({
      url: `/photos/${photoId}`,
      method: 'delete',
      data: {
        id: photoId
      }
    }).done(() => {
      // stay in current page 
      getNumOfAllPhotos().then(res => {
        let numOfPhotos = res.num_of_photos
        let lastPage = Math.ceil(numOfPhotos/photosPerPage)
        if(photosPage >= lastPage) {
          photosPage = lastPage // update page number
          requestPhotos(photosOffset, photosPage)
          setPhotosPage.textContent = photosPage
          setTotalPhotosPage.textContent = `/${lastPage}`
          if(photosPage == 1) {
            loadPrev12Photos.style.display = 'none'
            loadNext12Photos.style.display = 'none'
          }
        } else if(photosPage <= lastPage) {
          requestPhotos(photosOffset, photosPage)
          setPhotosPage.textContent = photosPage
          setTotalPhotosPage.textContent = `/${lastPage}`
        }
      })
    })
  }

  let tabLinks = document.querySelectorAll('.tablinks')
  let openTab = (event, tabName) => {
    let tabContents = document.querySelectorAll('.tabcontent')
    tabContents.forEach(tabContent => {
      tabContent.style.display = 'none'
    })  
    tabLinks.forEach(tabLink => {
      tabLink.className = tabLink.className.replace(' active', '')
    })
    document.getElementById(tabName).style.display = "block"
    event.currentTarget.className += " active"
  }
  document.getElementById("defaultOpen").click()

  tabLinks[1].addEventListener('click', () => {requestAlbums(albumsOffset, albumsPage)})

</script>






























